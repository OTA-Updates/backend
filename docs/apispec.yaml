openapi: 3.0.3
info:
  title: OTA backend - OpenAPI 3.0
  description: OTA backend
  version: 1.0.0
servers:
  - url: localhost:8080
tags:
  - name: devices
    description: devices
  - name: tags
    description: tags
  - name: firmware
    description: firmware
  - name: users
    description: users
paths:
  /api/v1/devices:
    post:
      tags:
        - devices
      summary: Creates a new device
      operationId: createDevice
      requestBody:
        $ref: '#/components/requestBodies/CreateDeviceRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/CreateDeviceResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    get:
      tags:
        - devices
      summary: List of devices
      operationId: devices
      parameters:
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: pageSize
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/DevicePageResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/devices/{id}:
    put:
      tags:
        - devices
      summary: Update existing device by given id
      operationId: updateDevice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/UpdateDeviceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateDeviceResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    get:
      tags:
        - devices
      summary: Receive existing device by given id
      operationId: getDeviceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/GetDeviceByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    delete:
      tags:
        - devices
      summary: Delete existing device by given id
      operationId: deleteDevice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted device
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/tags:
    post:
      tags:
        - tags
      summary: Creates a new tag
      operationId: createTag
      requestBody:
        $ref: '#/components/requestBodies/CreateTagRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/CreateTagResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    get:
      tags:
        - tags
      summary: List of tags
      operationId: tags
      responses:
        '200':
          $ref: '#/components/responses/TagsResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/tags/{id}:
    put:
      tags:
        - tags
      summary: Update existing tag by given id
      operationId: updateTag
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/UpdateTagRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTagResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    get:
      tags:
        - tags
      summary: Receive existing tag by given id
      operationId: getTagById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/GetTagByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    delete:
      tags:
        - tags
      summary: Delete existing tag by given id
      operationId: deleteTag
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted tag
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/firmware:
    post:
      tags:
        - firmware
      summary: Uploads a new firmware
      operationId: uploadFirmware
      requestBody:
        $ref: '#/components/requestBodies/UploadFirmwareRequestBody'
      responses:
        '201':
          description: Successfully uploaded firmware
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/firmware/{id}:
    get:
      tags:
        - firmware
      summary: Downloads existing firmware by given id
      operationId: downloadFirmware
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/DownloadFirmwareResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'
    delete:
      tags:
        - firmware
      summary: Delete existing firmware by given id
      operationId: deleteFirmware
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted firmware
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

  /api/v1/firmware/{id}/info:
    get:
      tags:
        - firmware
      summary: Receives existing firmware info by given id
      operationId: getFirmwareInfoById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/DownloadFirmwareResponse'
        '400':
          $ref: '#/components/responses/BadRequestExceptionResponse'
        '403':
          $ref: '#/components/responses/ForbiddenExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFoundExceptionResponse'
        '500':
          $ref: '#/components/responses/InternalServerExceptionResponse'

components:
  schemas:
    DeploymentDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        group:
          $ref: '#/components/schemas/GroupDto'
        firmware:
          $ref: "#/components/schemas/FirmwareDto"
        scheduledDate:
          type: string
        state:
          $ref: '#/components/schemas/StatusDto'
        completionDate:
          type: string

    DeploymentTaskDto:
      type: object
      properties:
        id:
          type: string
        device:
          $ref: '#/components/schemas/DeviceDto'
        lastSeen:
          type: string
        state:
          $ref: '#/components/schemas/StatusDto'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'

    StatusDto:
      type: object
      properties:
        state:
          enum:
            - Done
            - Pending
            - Executed
            - Error

    RecordDto:
      type: object
      properties:
        message:
          type: string

    DeviceDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        firmware:
          type: object
          $ref: '#/components/schemas/FirmwareDto'
        lastSeen:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'

    TagDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        color:
          type: string

    GroupDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        firmware:
          type: object
          $ref: '#/components/schemas/FirmwareDto'
        device:
          $ref: '#/components/schemas/DeviceDto'
        protocol:
          type: string
        sharedKey:
          type: string

    FirmwareDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        fileName:
          type: string
        created:
          type: string
        storageLink:
          type: string


  requestBodies:
    CreateDeploymentRequestBody:
      description: create deployment request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              groupId:
                type: string
              firmwareId:
                type: string
              devices:
                type: array
                items:
                  type: string
              scheduled:
                type: string

    UpdateDeploymentRequestBody:
      description: update deployment request body
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              scheduled:
                type: string

    CreateGroupRequestBody:
      description: create group request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              protocol:
                type: string

    UpdateGroupRequestBody:
      description: update group request body
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string

    CreateDeviceRequestBody:
      description: create device request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              groupId:
                type: string
              serialNumber:
                type: string
              tags:
                type: array
                items:
                  type: string

    UpdateDeviceRequestBody:
      description: update device request body
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              serialNumber:
                type: string

    CreateTagRequestBody:
      description: create tag request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              color:
                type: string

    UpdateTagRequestBody:
      description: update tag request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              color:
                type: string

  responses:
    CreateDeviceResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    DevicePageResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DevicePage'
    UpdateDeviceResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    GetDeviceByIdResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    CreateTagResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tag'
    TagsResponse:
      description:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
    UpdateTagResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tag'
    GetTagByIdResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tag'
    DownloadFirmwareResponse:
      description:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    GetFirmwareInfoByIdResponse:
      description:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FirmwareInfo'
    BadRequestExceptionResponse:
      description: Failure when request was not correct
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenExceptionResponse:
      description: Failure user cannot be authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundExceptionResponse:
      description: Failure when object cannot be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerExceptionResponse:
      description: Failure by internal server exceptions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
